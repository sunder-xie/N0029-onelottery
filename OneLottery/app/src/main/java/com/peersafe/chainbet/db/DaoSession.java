package com.peersafe.chainbet.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig oneLotteryDaoConfig;
    private final DaoConfig prizeRuleDaoConfig;
    private final DaoConfig friendDaoConfig;
    private final DaoConfig oneLotteryBetDaoConfig;
    private final DaoConfig messageNotifyDaoConfig;
    private final DaoConfig withdrawBankCardDaoConfig;
    private final DaoConfig withdrawRecordDaoConfig;
    private final DaoConfig transactionDetailDaoConfig;

    private final UserInfoDao userInfoDao;
    private final OneLotteryDao oneLotteryDao;
    private final PrizeRuleDao prizeRuleDao;
    private final FriendDao friendDao;
    private final OneLotteryBetDao oneLotteryBetDao;
    private final MessageNotifyDao messageNotifyDao;
    private final WithdrawBankCardDao withdrawBankCardDao;
    private final WithdrawRecordDao withdrawRecordDao;
    private final TransactionDetailDao transactionDetailDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        oneLotteryDaoConfig = daoConfigMap.get(OneLotteryDao.class).clone();
        oneLotteryDaoConfig.initIdentityScope(type);

        prizeRuleDaoConfig = daoConfigMap.get(PrizeRuleDao.class).clone();
        prizeRuleDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        oneLotteryBetDaoConfig = daoConfigMap.get(OneLotteryBetDao.class).clone();
        oneLotteryBetDaoConfig.initIdentityScope(type);

        messageNotifyDaoConfig = daoConfigMap.get(MessageNotifyDao.class).clone();
        messageNotifyDaoConfig.initIdentityScope(type);

        withdrawBankCardDaoConfig = daoConfigMap.get(WithdrawBankCardDao.class).clone();
        withdrawBankCardDaoConfig.initIdentityScope(type);

        withdrawRecordDaoConfig = daoConfigMap.get(WithdrawRecordDao.class).clone();
        withdrawRecordDaoConfig.initIdentityScope(type);

        transactionDetailDaoConfig = daoConfigMap.get(TransactionDetailDao.class).clone();
        transactionDetailDaoConfig.initIdentityScope(type);

        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        oneLotteryDao = new OneLotteryDao(oneLotteryDaoConfig, this);
        prizeRuleDao = new PrizeRuleDao(prizeRuleDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);
        oneLotteryBetDao = new OneLotteryBetDao(oneLotteryBetDaoConfig, this);
        messageNotifyDao = new MessageNotifyDao(messageNotifyDaoConfig, this);
        withdrawBankCardDao = new WithdrawBankCardDao(withdrawBankCardDaoConfig, this);
        withdrawRecordDao = new WithdrawRecordDao(withdrawRecordDaoConfig, this);
        transactionDetailDao = new TransactionDetailDao(transactionDetailDaoConfig, this);

        registerDao(UserInfo.class, userInfoDao);
        registerDao(OneLottery.class, oneLotteryDao);
        registerDao(PrizeRule.class, prizeRuleDao);
        registerDao(Friend.class, friendDao);
        registerDao(OneLotteryBet.class, oneLotteryBetDao);
        registerDao(MessageNotify.class, messageNotifyDao);
        registerDao(WithdrawBankCard.class, withdrawBankCardDao);
        registerDao(WithdrawRecord.class, withdrawRecordDao);
        registerDao(TransactionDetail.class, transactionDetailDao);
    }
    
    public void clear() {
        userInfoDaoConfig.getIdentityScope().clear();
        oneLotteryDaoConfig.getIdentityScope().clear();
        prizeRuleDaoConfig.getIdentityScope().clear();
        friendDaoConfig.getIdentityScope().clear();
        oneLotteryBetDaoConfig.getIdentityScope().clear();
        messageNotifyDaoConfig.getIdentityScope().clear();
        withdrawBankCardDaoConfig.getIdentityScope().clear();
        withdrawRecordDaoConfig.getIdentityScope().clear();
        transactionDetailDaoConfig.getIdentityScope().clear();
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public OneLotteryDao getOneLotteryDao() {
        return oneLotteryDao;
    }

    public PrizeRuleDao getPrizeRuleDao() {
        return prizeRuleDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public OneLotteryBetDao getOneLotteryBetDao() {
        return oneLotteryBetDao;
    }

    public MessageNotifyDao getMessageNotifyDao() {
        return messageNotifyDao;
    }

    public WithdrawBankCardDao getWithdrawBankCardDao() {
        return withdrawBankCardDao;
    }

    public WithdrawRecordDao getWithdrawRecordDao() {
        return withdrawRecordDao;
    }

    public TransactionDetailDao getTransactionDetailDao() {
        return transactionDetailDao;
    }

}
